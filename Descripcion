Descripcion del problema:
Para este proyecto se debia analizar todos los casos, condiciones, y algoritmos necesarios para desarrollar el juego 2048.
Este consiste en relizar sumas de numeros iguales que se encuentren en posiciones continuas dentro de una matris determinada.
Para esto se realizaron una variada cantidad de procesos para lograr el resultado final, en el cual tambien se requeria poder jugar
en las bases numerales: octal, binario y hexadecimal, ademas de decimal que es el clasico. 

Planificacion del proyecto:
Para planear el proyecto se uso una serie de notas de tareas, desarrollo del pensamiento logico, asignacion de tareas, busqueda
e investigacion de variados temas, entre otros. Para mantener el orden se fue dividiendo el proyecto por partes, entre estas las
mas destacadas fueron: el menu de inicio, el uso del teclado, las funciones propias del juego y la conversion a las diferentes bases
numericas.

Algoritmos desarrollados:
[Orden Cronologico]

Parte grafica:
Al iniciar el proyecto primero se desarrolló la parte grafica del Login, para esto se uso tkinter como herramienta de interfaz
grafica. Este proceso requirio de mucha busqueda e investigacion de las funciones propias de la misma. Para esta parte se creo la 
ventana inicial, el guardado de los usuarios, el uso de messagebox, y el leaderboard el cual guardaba y reconocia los nombres de los
usuarios registrados previamente. Posteriormente se creo una segunda ventana para la seleccion de la base, sin embargo por cambios en
proyecto esta parte no se utilizo.

Inicio de la matriz:
Para el comienzo de la parte logica, se creo una matriz de 4x4 definida globalmete como m1, la cual estaba rellena unicamente por 0. 
Al jugar el juego original nos damos cuenta que al comienzo salen dos numeros aleatorios entre 2 y 4, en esta ocacion se uso una funcion
llamada random, la cual se encarga de seleccionar un numero aleatorio en un rango. Ademas de usar esta funcion para los numeros, habia
que escoger una posicion aleatoria donde se reemplazaran los 0 por el numero generado. Por lo tanto se utilizo para un numero 
entre 0 y 3, guardado en la variable i y otra en la j, los cuales eran los subindices de la matriz, y asi para la segunda posicion. Luego
se comparan los numeros obtenidos en caso de que sea la misma posicion. Posteriormente para el funcionamiento se pasa a analizar la base
elejida que se encuentra en un input descrito posteriormente.

Teclas:
En esta parte tambien se requeria del uso de interfaz grafica, por lo cual tambien se uso tkinter. En este caso para que duncionara 
se necesitaba una ventana abierta donde las teclas pudieran reaccionar y llevar a las funciones correcpondientes dependiendo de la
direccion. A partir de la funcion principal del teclado, se derivaban 4 funciones, una para cada direccion. Escencialmente cada una 
de estas realiza el mismo trabajo pero inicia por partes distintas de la matriz, esto para recorrerla en orden de direccion. Luego se
definio que se necesitaba mantener a ventana abierta para poder continuar el uso de las teclas, como adicional, se agrego una parte 
grafica con botones y labels para decorar.

Bases:
Para las diferentes bases se necesitó crear un conversor desde la matriz decimal a la matriz en la base y de la base a decimal. 
Esto con el proposito de poder usar las funciones asignadas a cada direccion para operar la matriz en decimal. Por esta razon de creo
una funcion que analize en que base se esta jugando y pasar la matriz a decimal a la hora de realizar cualquier movimiento o tocar 
cualquier tecla. Asi segun el flujo se opera la matriz siempre estando en decimal y finalmente se llama a una funcion que manda a 
convertir la matriz de decimal a la base elegida para realizar la impresion. 

Menu en consola:
Finalmente luego de que el proyecto recibiera algunos cambios se opto por pasar la parte previamente realizada en la interfaz grafica
del Login a la consola. Muchas de las funciones se utilizaron en el nuevo menu, solamente con pequeños cambios. Las funciones para el 
archivo de texto se mantuvieron, asi como las que previamente eran messagebox se cambiaron por prints. Y para ingresar la informacion
se utilizaron dos inputs, el primero para el nombre de usuario, y el segundo para la base. En esta segunda se definio una variable 
global llamada b, haciendo referencia a la base, la cual es usada para los analisis mencionados con aterioridad.


Bugs y errores:
A continuacion se presentan algunos errores principales, algunos que fueron solucionados y los que no:
Error con la operacion de la matriz en otras bases
Para esta parte se intento varios metodos, primero se probo usando dos matrices iguales, una en decimal, la cual se usaba
para la operciones y otra en la base seleccionada, sin embargo esto fue cambiado mas adelante porque al editar una matriz se ediataba 
la otra lo cual provocaba errores en las operaciones.

Error en la traduccion de la matriz
En este caso se intento usar un convetirtidor individual para cada base, pero pronto se noto que el proceso era muy largo y no daba
el resultado esperado. Por lo tanto se procedio al uso de un convertidor universal, pero este tampoco funiono porque cada lenguaje 
tenia propiedades unicas dentro de la matriz entonces los numeros no se convertian apropiadamente. A causa de esto se opto por realizar
los casos bases de cada numeracion, que en cada una eran 12, lo cual reduciria el margen de error ya que eran las unicas opciones de 
numeros que podian aparecer en la matriz.

Errores de strings e ints
En la traduccion de los numeros se usaba un algoritmo sencillo que cambiaba cada posicion de la matriz, este operaba con str e int, en 
algunos casos se tuvo que cambiar debido a que el resultado no se obtenia bien por lo que se realizaban sumas de strings afctando los
resultados. Este conflicto se presento principalmente para la base octal.

Error con el uso del teclado
A la hora de finalizar el proyecto surgio una problematica con el teclado ya que luego de tocar la pantalla o cualquier otra tecla
los movimientos y direcciones se volvian inutilizables, luego de investigar el error se determino que era a causa de que la ventana
de tkinter tenia el atributo .withdraw que es para que no se muestre. Accion que debia realizar para que el uso de las teclas sea 
continuo y no sea afectado por otras acciones en la consola. Para arreglarlo se le coloco una geometria y como aspecto adicional se
usaron botones y labels con las instrucciones del teclado.


