#cambiar la matriz de decimal a x base
def base(b,m1):
    Bin=2
    Dec=10
    Oct=8
    Hex=16
    
    if(b==2):
        mBin(0,0,m1)
    elif(b==10):
        #si esta en decimal no hay cambios
        print(vertical(m1))
    elif(b==8):
        mOct(0,0,m1)
    elif(b==16):
        mHex(0,0,m1)
    else:
        print("Base invalida")
        

#cambiar de la base a decimal para operar
def base_a_dec(x,i,j,m1):
    Bin=2
    Dec=10
    Oct=8
    Hex=16
    
    if(b==2):
        Bin_a_Dec(x,i,j,m1)
        
    elif(b==10):
        ""
        
    elif(b==8):
        Oct_a_Dec(x,i,j,m1)
        
    elif(b==16):
        Hex_a_Dec(str(x),i,j,m1)
    else:
        print("Base invalida")
    


#Decimal a Binario
def mBin(i,j,m1):
    if(i==3):
        if(j==3):
            convBin(m1[j][i],i,j,m1)
            print (vertical(m1))
        else:
            convBin(m1[i][j],i,j,m1)
            
            return mBin(i,j+1,m1)
    elif(j==3):
        convBin(m1[i][j],i,j,m1)
        return mBin(i+1,0,m1)
    else:
        convBin(m1[i][j],i,j,m1)
        return mBin(i,j+1,m1)
        

def convBin(x,i,j,m1):
    if(x==0):
        m1[i][j]=("0000")
    elif(x==2):
        m1[i][j]=("0010")
    elif(x==4):
        m1[i][j]=("0100")
    elif(x==8):
        m1[i][j]=("1000")
    elif(x==16):
        m1[i][j]=("10000")
    elif(x==32):
        m1[i][j]=("100000")
    elif(x==64):
        m1[i][j]=("1000000")
    elif(x==128):
        m1[i][j]=("10000000")
    elif(x==256):
        m1[i][j]=("100000000")
    elif(x==512):
        m1[i][j]=("1000000000")
    elif(x==1024):
        m1[i][j]=("10000000000")
    elif(x==2048):
        m1[i][j]=("100000000000")
                     
        
#Binario a Decimal

def mDec(i,j,m1):
    if(i==3):
        if(j==3):
            #Bin_a_Dec(m1[i][j],i,j,m1)
            base_a_dec(m1[i][j],i,j,m1)
            return(m1)
            print(m1)
        else:
            #Bin_a_Dec(m1[i][j],i,j,m1)
            base_a_dec(m1[i][j],i,j,m1)
            mDec(i,j+1,m1)
            
    elif(j==3):
        #Bin_a_Dec(m1[i][j],i,j,m1)
        base_a_dec(m1[i][j],i,j,m1)
        mDec(i+1,0,m1)
    else:
        #Bin_a_Dec(m1[i][j],i,j,m1)
        base_a_dec(m1[i][j],i,j,m1)
        mDec(i,j+1,m1)
        
def Bin_a_Dec(x,i,j,m1):
     m1[i][j]=(int(str(x),2))

#Decimal a Octal
def mOct(i,j,m1):
    if(i==3):
        if(j==3):
            convOct(m1[j][i],i,j,m1)
            print (vertical(m1))
        else:
            convOct(m1[i][j],i,j,m1)
            
            return mOct(i,j+1,m1)
    elif(j==3):
        convOct(m1[i][j],i,j,m1)
        return mOct(i+1,0,m1)
    else:
        convOct(m1[i][j],i,j,m1)
        return mOct(i,j+1,m1)

def convOct(x,i,j,m1):
    if(x==0):
        m1[i][j]=(0)
    elif(x==2):
        m1[i][j]=(2)
    elif(x==4):
        m1[i][j]=(4)
    elif(x==8):
        m1[i][j]=(10)
    elif(x==16):
        m1[i][j]=(20)
    elif(x==32):
        m1[i][j]=(40)
    elif(x==64):
        m1[i][j]=(100)
    elif(x==128):
        m1[i][j]=(200)
    elif(x==256):
        m1[i][j]=(400)
    elif(x==512):
        m1[i][j]=(1000)
    elif(x==1024):
        m1[i][j]=(2000)
    elif(x==2048):
        m1[i][j]=(4000)


#Octal a Decimal
    
def Oct_a_Dec(x,i,j,m1):
    x=str(x)
    m1[i][j]= int(str(int(x, 8)))

#Decimal a Hexadecimal
def mHex(i,j,m1):
    if(i==3):
        if(j==3):
            convHex(m1[j][i],i,j,m1)
            print (vertical(m1))
        else:
            convHex(m1[i][j],i,j,m1)
            
            return mHex(i,j+1,m1)
    elif(j==3):
        convHex(m1[i][j],i,j,m1)
        return mHex(i+1,0,m1)
    else:
        convHex(m1[i][j],i,j,m1)
        return mHex(i,j+1,m1)

def convHex(x,i,j,m1):
    if(x==0):
        m1[i][j]=(0)
    elif(x==2):
        m1[i][j]=(2)
    elif(x==4):
        m1[i][j]=(4)
    elif(x==8):
        m1[i][j]=(8)
    elif(x==16):
        m1[i][j]=(10)
    elif(x==32):
        m1[i][j]=(20)
    elif(x==64):
        m1[i][j]=(40)
    elif(x==128):
        m1[i][j]=(80)
    elif(x==256):
        m1[i][j]=(100)
    elif(x==512):
        m1[i][j]=(200)
    elif(x==1024):
        m1[i][j]=(400)
    elif(x==2048):
        m1[i][j]=(800)

#Hexadecimal a Decimal
def Hex_a_Dec(x,i,j,m1):
    m1[i][j]= int(x, 16)
        
